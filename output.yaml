AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'Backend API for Managing Game Knight events

  '
Parameters:
  Stage:
    Type: String
    Default: Staging
    Description: API Stage
Resources:
  EventsApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      Name: Game Knights Events API
      StageName:
        Ref: Stage
      Auth:
        DefaultAuthorizer: CognitoPasswordless
        Authorizers:
          CognitoPasswordless:
            UserPoolArn: arn:aws:cognito-idp:us-east-1:569879156317:userpool/us-east-1_Okkk4SAZX
      Cors: '''*'''
      EndpointConfiguration:
        Type: EDGE
      Tags:
        Owner: EventsAPI
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: s3://cp-sam-deploy-east1/3de7325c7042d76ef18b9d1419c39321
    Metadata:
      SamResourceId: EventsApiGateway
  EventsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: game_events
      AttributeDefinitions:
      - AttributeName: event_id
        AttributeType: S
      - AttributeName: event_type
        AttributeType: S
      - AttributeName: date
        AttributeType: S
      KeySchema:
      - AttributeName: event_id
        KeyType: HASH
      GlobalSecondaryIndexes:
      - IndexName: EventTypeByDate
        KeySchema:
        - AttributeName: event_type
          KeyType: HASH
        - AttributeName: date
          KeyType: RANGE
        Projection:
          ProjectionType: ALL
      BillingMode: PAY_PER_REQUEST
      Tags:
      - Key: Name
        Value: game_events
      - Key: Owner
        Value: EventsAPI
    Metadata:
      SamResourceId: EventsTable
  ManageEventsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://cp-sam-deploy-east1/407d899f1914e15705900e3ed3d8d1a6
      Handler: app.lambda_handler
      Runtime: python3.12
      Timeout: 30
      Events:
        GetEvents:
          Type: Api
          Properties:
            RestApiId:
              Ref: EventsApiGateway
            Path: /events
            Method: GET
            Auth:
              Authorizer: CognitoPasswordless
        EventsOptions:
          Type: Api
          Properties:
            RestApiId:
              Ref: EventsApiGateway
            Path: /events
            Method: OPTIONS
            Auth:
              Authorizer: NONE
        GetEvent:
          Type: Api
          Properties:
            RestApiId:
              Ref: EventsApiGateway
            Path: /event
            Method: GET
            Auth:
              Authorizer: CognitoPasswordless
        CreateEvent:
          Type: Api
          Properties:
            RestApiId:
              Ref: EventsApiGateway
            Path: /event
            Method: POST
            Auth:
              Authorizer: CognitoPasswordless
        DeleteEvent:
          Type: Api
          Properties:
            RestApiId:
              Ref: EventsApiGateway
            Path: /event
            Method: DELETE
            Auth:
              Authorizer: CognitoPasswordless
        UpdateEvent:
          Type: Api
          Properties:
            RestApiId:
              Ref: EventsApiGateway
            Path: /event
            Method: PUT
            Auth:
              Authorizer: CognitoPasswordless
        EventOptions:
          Type: Api
          Properties:
            RestApiId:
              Ref: EventsApiGateway
            Path: /event
            Method: OPTIONS
            Auth:
              Authorizer: NONE
        GetEventRSVP:
          Type: Api
          Properties:
            RestApiId:
              Ref: EventsApiGateway
            Path: /event/rsvp
            Method: GET
            RequestParameters: null
            Auth:
              Authorizer: CognitoPasswordless
        EventRsvpOptions:
          Type: Api
          Properties:
            RestApiId:
              Ref: EventsApiGateway
            Path: /event/rsvp
            Method: OPTIONS
            Auth:
              Authorizer: NONE
      Tags:
        Owner: EventsAPI
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: EventsTable
      - SQSSendMessagePolicy:
          QueueName:
            Fn::GetAtt:
            - BggPictureSqsQueue
            - QueueName
      - S3ReadPolicy:
          BucketName: cdkstack-bucket83908e77-7tr0zgs93uwh
    Metadata:
      SamResourceId: ManageEventsFunction
  RetrieveBGGImageFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://cp-sam-deploy-east1/d3b610f16044481eced129ac5eb502fa
      Handler: app.lambda_handler
      Runtime: python3.12
      Timeout: 30
      Events:
        MySQSEvent:
          Type: SQS
          Properties:
            Queue:
              Fn::GetAtt:
              - BggPictureSqsQueue
              - Arn
            BatchSize: 10
      Policies:
      - S3CrudPolicy:
          BucketName: cdkstack-bucket83908e77-7tr0zgs93uwh
    Metadata:
      SamResourceId: RetrieveBGGImageFunction
  BggPictureSqsQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: bgg_picture_sqs_queue
    Metadata:
      SamResourceId: BggPictureSqsQueue
Outputs:
  EventsApiGateway:
    Description: API Gateway endpoint URL for Staging stage for Game Knights Events
      function
    Value:
      Fn::Sub: https://${EventsApiGateway}.execute-api.${AWS::Region}.amazonaws.com/${Stage}/events/
  EventsApiGatewayRestApiId:
    Description: API Gateway ARN for Game Knights Events AWS API Gateway
    Value:
      Ref: EventsApiGateway
    Export:
      Name: EventsApiGateway-RestApiId
  EventsApiGatewayRootResourceId:
    Value:
      Fn::GetAtt:
      - EventsApiGateway
      - RootResourceId
    Export:
      Name: EventsApiGateway-RootResourceId
